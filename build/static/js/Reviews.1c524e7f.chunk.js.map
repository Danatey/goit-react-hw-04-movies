{"version":3,"sources":["views/Reviews.jsx"],"names":["Reviews","useState","review","setReview","movieId","useParams","useEffect","getMovieReviews","then","response","data","results","length","map","author","content"],"mappings":"yLA4BeA,UAvBC,WACZ,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACOC,EAAWC,cAAXD,QASP,OAPAE,qBAAU,WACNC,YAAgBH,GAASI,MAAK,SAAAC,GAAQ,OAClCN,EAAUM,EAASC,KAAKC,cAG7B,CAACP,IAEG,6BACFF,EAAOU,OAAO,EACXV,EAAOW,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAX,OACX,+BACI,6BAAKD,IACL,4BAAIC,MAFCD,MAKP,6BAAI","file":"static/js/Reviews.1c524e7f.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router';\r\n\r\nimport {getMovieReviews} from '../services/API'\r\n\r\nconst Reviews = () => {\r\n    const [review, setReview] = useState([]);\r\n    const {movieId} = useParams();\r\n\r\n    useEffect(() => {\r\n        getMovieReviews(movieId).then(response =>\r\n            setReview(response.data.results)\r\n            \r\n        );\r\n    }, [movieId]);\r\n\r\n    return <ul>\r\n        {review.length>0 ? (\r\n            review.map(({ author, content }) => (\r\n            <li key={author}>\r\n                <h3>{author}</h3>\r\n                <p>{content}</p>\r\n            </li>\r\n            ) \r\n        )) : (<li><p>We don't have any reviews for this movie.</p></li>)}\r\n    </ul>\r\n}\r\n\r\nexport default Reviews;"],"sourceRoot":""}